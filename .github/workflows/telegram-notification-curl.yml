name: Telegram Notification (Curl)

on:
  workflow_call:
    inputs:
      message:
        description: 'Mensagem para enviar no Telegram'
        required: true
        type: string
      status:
        description: 'Status do workflow (success, failure, cancelled)'
        required: true
        type: string
      workflow_name:
        description: 'Nome do workflow que executou'
        required: true
        type: string
      run_url:
        description: 'URL da execu√ß√£o do workflow'
        required: true
        type: string
      branch:
        description: 'Branch que foi executada'
        required: false
        type: string
        default: 'main'

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Debug configuration
        run: |
          echo "üîç Verificando configura√ß√£o antes de enviar..."
          echo "Token configurado: ${{ secrets.TELEGRAM_BOT_TOKEN != '' && '‚úÖ Sim' || '‚ùå N√£o' }}"
          echo "Chat ID configurado: ${{ secrets.TELEGRAM_CHAT_ID != '' && '‚úÖ Sim' || '‚ùå N√£o' }}"
          echo "Token length: ${#TELEGRAM_BOT_TOKEN}"
          echo "Chat ID: $TELEGRAM_CHAT_ID"
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Test bot connection
        run: |
          echo "üì± Testando conex√£o com o bot..."
          BOT_RESPONSE=$(curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe")
          echo "Resposta getMe: $BOT_RESPONSE"
          
          if ! echo "$BOT_RESPONSE" | grep -q '"ok":true'; then
            echo "‚ùå Bot n√£o encontrado ou token inv√°lido"
            exit 1
          fi
          echo "‚úÖ Bot encontrado e v√°lido"
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Test chat access
        run: |
          echo "üë• Testando acesso ao chat..."
          CHAT_RESPONSE=$(curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getChat?chat_id=${TELEGRAM_CHAT_ID}")
          echo "Resposta getChat: $CHAT_RESPONSE"
          
          if ! echo "$CHAT_RESPONSE" | grep -q '"ok":true'; then
            echo "‚ùå Chat n√£o acess√≠vel"
            echo "Verifique se o bot foi adicionado ao grupo/canal"
            exit 1
          fi
          echo "‚úÖ Chat acess√≠vel"
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Send Telegram notification
        run: |
          echo "üì§ Enviando notifica√ß√£o no Telegram..."
          
          # Preparar a mensagem (escapar caracteres especiais)
          MESSAGE="ü§ñ **GitHub Actions - ${{ inputs.workflow_name }}**
          
          üìã **Status:** ${{ inputs.status == 'success' && '‚úÖ Sucesso' || inputs.status == 'failure' && '‚ùå Falha' || '‚ö†Ô∏è Cancelado' }}
          
          üåø **Branch:** ${{ inputs.branch }}
          
          üìù **Detalhes:** ${{ inputs.message }}
          
          üîó **Ver execu√ß√£o:** [${{ inputs.workflow_name }}](${{ inputs.run_url }})
          
          ‚è∞ **Executado em:** $(date -u +'%d/%m/%Y %H:%M:%S') UTC"
          
          # Enviar via curl com melhor tratamento de erros
          echo "Enviando mensagem para chat_id: $TELEGRAM_CHAT_ID"
          
          RESPONSE=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST \
            "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
              \"text\": \"${MESSAGE}\",
              \"parse_mode\": \"Markdown\"
            }")
          
          # Separar resposta e c√≥digo HTTP
          HTTP_CODE=$(echo "$RESPONSE" | grep "HTTP_CODE:" | cut -d: -f2)
          API_RESPONSE=$(echo "$RESPONSE" | grep -v "HTTP_CODE:")
          
          echo "üì• Resposta da API:"
          echo "$API_RESPONSE"
          echo "üìä C√≥digo HTTP: $HTTP_CODE"
          
          # Verificar se foi bem-sucedido
          if echo "$API_RESPONSE" | grep -q '"ok":true'; then
            echo "‚úÖ Notifica√ß√£o enviada com sucesso!"
          else
            echo "‚ùå Falha ao enviar notifica√ß√£o"
            echo "üîç Erro detalhado: $API_RESPONSE"
            echo "üìä C√≥digo HTTP: $HTTP_CODE"
            
            # Sugest√µes baseadas no erro
            if [ "$HTTP_CODE" = "404" ]; then
              echo "üö® ERRO 404: Bot ou chat n√£o encontrado"
              echo "   - Verifique se o token est√° correto"
              echo "   - Verifique se o chat ID est√° correto"
              echo "   - Verifique se o bot foi adicionado ao grupo/canal"
            elif [ "$HTTP_CODE" = "403" ]; then
              echo "üö® ERRO 403: Bot bloqueado ou sem permiss√µes"
              echo "   - Verifique se o bot n√£o foi bloqueado"
              echo "   - Verifique as permiss√µes do bot no chat"
            elif [ "$HTTP_CODE" = "400" ]; then
              echo "üö® ERRO 400: Par√¢metros inv√°lidos"
              echo "   - Verifique o formato da mensagem"
              echo "   - Verifique o chat ID"
            fi
            
            exit 1
          fi
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
