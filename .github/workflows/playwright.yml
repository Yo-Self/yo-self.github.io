name: Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build the application
      run: npm run build
      env:
        CI: true
    
    - name: Start the application
      run: |
        npm run start &
        echo "Waiting for app to start..."
        sleep 60
        echo "App should be ready now"
        curl -f http://localhost:3000 || exit 1
      env:
        CI: true
    
    - name: Run Playwright tests
      run: npx playwright test --reporter=line
      env:
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-matrix:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build the application
      run: npm run build
      env:
        CI: true
    
    - name: Start the application
      run: |
        npm run start &
        echo "Waiting for app to start..."
        sleep 60
        echo "App should be ready now"
        curl -f http://localhost:3000 || exit 1
      env:
        CI: true
    
    - name: Run Playwright tests on ${{ matrix.browser }}
      run: npx playwright test --project=${{ matrix.browser }} --reporter=line
      env:
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.browser }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-mobile:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        device: [Mobile Chrome, Mobile Safari]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build the application
      run: npm run build
      env:
        CI: true
    
    - name: Start the application
      run: |
        npm run start &
        echo "Waiting for app to start..."
        sleep 60
        echo "App should be ready now"
        curl -f http://localhost:3000 || exit 1
      env:
        CI: true
    
    - name: Run Playwright tests on ${{ matrix.device }}
      run: npx playwright test --project="${{ matrix.device }}" --reporter=line
      env:
        CI: true
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report-${{ matrix.device }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30
