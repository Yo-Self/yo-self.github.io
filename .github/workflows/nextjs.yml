name: Deploy Next.js with Supergroup Notifications

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'npm'
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Check package.json
        run: |
          echo "📦 Verificando package.json..."
          cat package.json
          echo "📋 Scripts disponíveis:"
          npm run
      
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      
      - name: Install dependencies
        run: |
          echo "📥 Instalando dependências..."
          npm ci
          echo "✅ Dependências instaladas com sucesso!"
      
      - name: Build with Next.js
        run: |
          echo "🔨 Iniciando build..."
          npm run build
          echo "✅ Build concluído com sucesso!"
          echo "📁 Conteúdo da pasta out:"
          ls -la out/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notification job - Success
  notify-success:
    needs: [build, deploy]
    if: always() && (needs.build.result == 'success' && needs.deploy.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Send success notification to CI/CD tab
        run: |
          echo "📱 Enviando notificação de sucesso..."
          curl -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
              "message_thread_id": 2,
              "text": "🤖 **GitHub Actions - Deploy Next.js**\n\n📋 **Status:** ✅ Sucesso\n\n🌿 **Branch:** ${{ github.ref_name }}\n\n📝 **Detalhes:** Build e deploy concluídos com sucesso! O site foi publicado no GitHub Pages.\n\n🔗 **Ver execução:** [Deploy Next.js](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n⏰ **Executado em:** ${{ github.event.head_commit.timestamp || github.event.schedule || 'Agora' }}",
              "parse_mode": "Markdown"
            }'
          echo "✅ Notificação enviada com sucesso!"

  # Notification job - Failure
  notify-failure:
    needs: [build, deploy]
    if: always() && (needs.build.result == 'failure' || needs.deploy.result == 'failure')
    runs-on: ubuntu-latest
    steps:
      - name: Send failure notification to CI/CD tab
        run: |
          echo "📱 Enviando notificação de falha..."
          curl -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{
              "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
              "message_thread_id": 2,
              "text": "🤖 **GitHub Actions - Deploy Next.js**\n\n📋 **Status:** ❌ Falha\n\n🌿 **Branch:** ${{ github.ref_name }}\n\n📝 **Detalhes:** Falha no build ou deploy. Verifique os logs para mais detalhes.\n\n🔗 **Ver execução:** [Deploy Next.js](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})\n\n⏰ **Executado em:** ${{ github.event.head_commit.timestamp || github.event.schedule || 'Agora' }}",
              "parse_mode": "Markdown"
            }'
          echo "✅ Notificação enviada com sucesso!"
